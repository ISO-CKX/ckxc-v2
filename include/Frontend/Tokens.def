#ifndef TOKEN_KWD
#define TOKEN_KWD(name, representation)
#endif

#ifndef TOKEN_SYM
#define TOKEN_SYM(name, representation)
#endif

#ifndef TOKEN_MISC
#define TOKEN_MISC(name, description)
#endif

TOKEN_KWD(class, "class")
TOKEN_KWD(enum, "enum")
TOKEN_KWD(using, "using")
TOKEN_KWD(def, "def")
TOKEN_KWD(func, "func")
TOKEN_KWD(int8, "int8")
TOKEN_KWD(int16, "int16")
TOKEN_KWD(int32, "int32")
TOKEN_KWD(int64, "int64")
TOKEN_KWD(uint8, "uint8")
TOKEN_KWD(uint16, "uint16")
TOKEN_KWD(uint32, "uint32")
TOKEN_KWD(uint64, "uint64")
TOKEN_KWD(char, "char")
TOKEN_KWD(float, "float")
TOKEN_KWD(double, "double")
TOKEN_KWD(quad, "quad")
TOKEN_KWD(void, "void")
TOKEN_KWD(bool, "bool")
TOKEN_KWD(niltype, "nullptr_t")
TOKEN_KWD(sizeof, "sizeof")
TOKEN_KWD(alignof, "alignof")
TOKEN_KWD(static_cast, "static_cast")
TOKEN_KWD(bitcast, "bit_cast")
TOKEN_KWD(const_cast, "const_cast")
TOKEN_KWD(const, "const")
TOKEN_KWD(volatile, "volatile")
TOKEN_KWD(restrict, "restrict")

TOKEN_KWD(true, "true")
TOKEN_KWD(false, "false")
TOKEN_KWD(nullptr, "nullptr")

/// @todo need more symbols
TOKEN_SYM(LBRACE, "{")
TOKEN_SYM(RBRACE, "}")
TOKEN_SYM(LBRACKET, "[")
TOKEN_SYM(RBRACKET, "]")
TOKEN_SYM(LPAREN, "(")
TOKEN_SYM(RPAREN, ")")
TOKEN_SYM(LT, "<")
TOKEN_SYM(GT, ">")
TOKEN_SYM(LTEQ, "<=")
TOKEN_SYM(GTEQ, ">=")
TOKEN_SYM(LTLT, "<<")
TOKEN_SYM(GTGT, ">>")
TOKEN_SYM(SEMI, ";")
TOKEN_SYM(COLON, ":")
TOKEN_SYM(DCOLON, "::")
TOKEN_SYM(DOT, ".")
TOKEN_SYM(COMMA, ",")
TOKEN_SYM(EQ, "=")
TOKEN_SYM(EQEQ, "==")
TOKEN_SYM(EXCEQ, "!=")
TOKEN_SYM(EXCLAIM, "!")
TOKEN_SYM(WAVE, "~")
TOKEN_SYM(PLUS, "+")
TOKEN_SYM(MINUS, "-")
TOKEN_SYM(DPLUS, "++")
TOKEN_SYM(DMINUS, "--")
TOKEN_SYM(ASTER, "*")
TOKEN_SYM(SLASH, "/")
TOKEN_SYM(PERCENT, "%")
TOKEN_SYM(AMP, "&")
TOKEN_SYM(DAMP, "&&")
TOKEN_SYM(PIPE, "|")
TOKEN_SYM(DPIPE, "||")
TOKEN_SYM(TIP, "^")
TOKEN_SYM(DTIP, "^^")

TOKEN_MISC(ID, "identifier")
TOKEN_MISC(LIT_INT, "integral literal")
TOKEN_MISC(LIT_UINT, "uint literal")
TOKEN_MISC(LIT_FLOAT, "floating literal")
TOKEN_MISC(LIT_CHAR, "char literal")
TOKEN_MISC(LIT_STR, "string literal")
TOKEN_MISC(EOI, "end of input")

#undef TOKEN_KWD
#undef TOKEN_SYM
#undef TOKEN_MISC
